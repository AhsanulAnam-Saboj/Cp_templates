/*______________________________________________Bismillahir Rahmanir Rahim____________________________________________


            .----------------.  .----------------.  .----------------.  .----------------.  .----------------.|    |
|            | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |    |
|            | |    _______   | || |      __      | || |   ______     | || |     ____     | || |     _____    | |    |
|            | |   /  ___  |  | || |     /  \     | || |  |_   _ \    | || |   .'    `.   | || |    |_   _|   | |    |
|            | |  |  (__ \_|  | || |    / /\ \    | || |    | |_) |   | || |  /  .--.  \  | || |      | |     | |    |
|            | |   '.___`-.   | || |   / ____ \   | || |    |  __'.   | || |  | |    | |  | || |   _  | |     | |    |
|            | |  |`\____) |  | || | _/ /    \ \_ | || |   _| |__) |  | || |  \  `--'  /  | || |  | |_' |     | |    |
|            | |  |_______.'  | || ||____|  |____|| || |  |_______/   | || |   `.____.'   | || |  `.___.'     | |    |
|            | |              | || |              | || |              | || |              | || |              | |    |
|            | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |    |
|            |'----------------'  '----------------'  '----------------'  '----------------'  '----------------'|    |
|                                                                                                                    |
|                                              Ahsanul Anam Saboj
|                                              Department of CSE
|                                              Comilla University                                                    |
|                                              Email : ahsanulanamsaboj1999@gmail.com                                |
|                         _____________________Something is going to be happened ___________________                   |
|___________________________________________________________________________________________________________________*/
#include<bits/stdc++.h>
using namespace std;
#define Start_by_the_grace_of_allah        int main()
#define next_Time_INsha_ALLAH               return 0;
#define ll                      long long int
#define ld                      long double
#define mod                     1000000007
#define test                    int tt;cin>>tt;while(tt--)
#define YES                     cout<<"YES"<<endl
#define NO                      cout<<"NO"<<endl
#define olta(a)                 reverse(a.begin(),a.end())
#define F                       first
#define S                       second
#define pb(x)                   push_back(x)
#define mp(x,y)                 make_pair(x,y)
#define veci                    vector<int>
#define vecl                    vector<long long>
#define vp                      vector<pair<ll, ll> >
#define v_min(a)                *min_element(a.begin(),a.end())
#define v_max(a)                *max_element(a.begin(),a.end())
#define v_mini(v)               min_element(v.begin(),v.end()) - v.begin();
#define v_maxi(v)               max_element(v.begin(),v.end()) - v.begin();
#define v_sum(a)                accumulate(a.begin(),a.end(),0)
#define un(a)                   a.erase(unique(a.begin(),a.end()),a.end())
#define delete(a)               a.erase(a.begin(),a.end())
#define Sort(a)                 sort(a.begin(),a.end())
#define is(a)                   is_sorted(a.begin(),a.end())
#define Saboj4632               ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define gcd(a,b)                __gcd(a,b)
#define lcm(a,b)                ((a)*(b))/gcd(a,b)
#define pi                      3.141592653589793
#define md                      1000000050
#define ull                     unsigned ll
#define en                      '\n'
const int N                     = (int)1e10;
#define INF                     1e11
//vector<ll>prime;
//bool mark[1000003];
//void sieve(ll n){ll i,j;mark[1]=1;for(i=4; i<=n; i+=2)mark[i]=1;prime.push_back(2);for(i=3; i<=n; i+=2){if(!mark[i]){prime.push_back(i);if(i*i<=n){for(j=i*i; j<=n; j+=(i*2))mark[j]=1;}}}}
//map<ll,ll>Factor;
//void Primefactorize(ll n){for(ll i=0; i<prime.size() && prime[i]*prime[i]<=n; i++){if(n%prime[i] == 0){while(n%prime[i] == 0){Factor[prime[i]]++;n/=prime[i];}}}if(n>1){Factor[n]++;}}
//(to print without sieve)--// void primeFactors(ll n){while (n % 2 == 0){cout << 2 << " ";n = n/2;}for (ll i = 3; i <= sqrt(n); i = i + 2){while (n % i == 0){cout << i << " ";n = n/i;}}if (n > 2)cout << n << " ";}
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//ll LIS(vector<ll> const& v){ll n = v.size();const ll INF = 1e10;vecl gdp(n+1,INF);gdp[0] = -INF;for(ll i=0;i<n;i++){ll l = upper_bound(gdp.begin(),gdp.end(),v[i])-gdp.begin();if(gdp[l-1]<v[i] && v[i]<gdp[l]){gdp[l] = v[i];}}for(ll i=n;i>=0;i--){if(gdp[i]<INF){n = i;break;}}return n;}

ll subtree[200001];
ll in_time[200001];
ll seg_tree[800001];
ll lazy[800001];
vector<ll> darr;//dfs array or euler tour array

ll dfs(vector<vector<ll>>& tree, ll  node,ll parent,ll& timer)//This dfs is to find euler tour (using timer)
{

    subtree[node] = 1;
    in_time[node] = timer;
    timer++;
    darr.pb(node);

    for(ll child:tree[node])
    {

        if(child!=parent)
        {

            subtree[node] += dfs(tree,child,node,timer);
        }
    }
    return subtree[node];

}

void lazy_update(ll node,ll b,ll e)
{


    seg_tree[node] = ((e-b+1)*lazy[node]);
    if(b!=e)            // ‚Äçsame na hole children e popagate value jug korbo
    {
        ll left = node<<1;
        ll right = left+1;
        lazy[left] += lazy[node];
        lazy[right] += lazy[node];
    }
    lazy[node] = 0; // node er propagate zero kore dibo update er pore

}
void initi(ll node,ll b,ll e,ll *arr)
{

    if(b==e)
    {
        //cout<<node<<" "<<" saboj "<<b<<" BB EE "<<e<<" "<<arr[darr[b]]<<"  darrr "<<darr[b]<<endl;
        seg_tree[node] = arr[darr[b]];
        return;
    }
    int left,right,mid;

    left = node*2;
    right = left + 1;
    mid = (b+e)/2;
    initi(left,b,mid,arr);
    initi(right,mid+1,e,arr);
    //  cout<<node<<" nodde"<<endl;
    seg_tree[node] = seg_tree[left] + seg_tree[right];
}


void stu(ll node,ll b,ll e,ll i,ll j,ll newval)
{

    if(lazy[node]!=0)lazy_update(node,b,e);
    if(i>e || j<b)
    {
        return;
    }
    if(b>=i && e<=j)
    {


        lazy[node] = newval;
        lazy_update(node,b,e);
        return;
    }
    ll left,right,mid;

    left = node*2;
    right = left+1;

    mid = (b+e)/2;
    stu(left,b,mid,i,j,newval);
    stu(right,mid+1,e,i,j,newval);
    seg_tree[node] = seg_tree[left] + seg_tree[right];


}
ll stq(ll node,ll b,ll e,ll i,ll j)
{
    if(lazy[node]!=0)lazy_update(node,b,e);

    if(i>e || j<b)return 0;
    if(b>=i && e<=j)return seg_tree[node];
    ll left,right,mid,p1,p2;

    left = node*2;
    right = left + 1;

    mid = (b+e)/2;

    p1 = stq(left,b,mid,i,j);
    p2 = stq(right,mid+1,e,i,j);

    return p1+p2;


}



void akam()
{
    ll n,i,x,y,k,ans=0;

    //cout<<"Case "<<tst<<": ";
    cin>>n>>k;

    ll arr[n+1];
    for(i=1; i<=n; i++)
    {
        cin>>arr[i];
    }

    vector<vector<ll>>tree(n+1);

    for(i=0; i<n-1; i++)
    {
        cin>>x>>y;
        tree[x].pb(y);
        tree[y].pb(x);
    }

    ll timer = 0;
    darr.pb(0);
    dfs(tree,1,-1,timer);

    ll ind[n+1];
//    for(i=1; i<darr.size(); i++)
//    {
//
//        cout<<darr[i]<< " ";
//    }
//   // cout<<endl;
    for(i=1; i<darr.size(); i++)
    {
        ind[darr[i]] = i;
      //  cout<<i<<" inn "<<darr[i]<<endl;
    }


    initi(1,1,n,arr);



    for(i=0; i<k; i++)
    {

        cin>>x;
        if(x==1)
        {
            cin>>x>>y;

            stu(1,1,n,ind[x],ind[x],y);
        }
        else if(x==2)
        {
            cin>>x;
            y = ind[x];

            //cout<<x<<" ind "<<y<<" "<<subtree[x]<<endl;

            ans = stq(1,1,n,y,y+subtree[x]-1);
            cout<<ans<<en;
        }
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //ll tst =0;

    // test
    akam();

    return 0;

}
