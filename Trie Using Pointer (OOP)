struct Trie{

    struct node{

        node *nxt[26];
        bool endmark;
        node(){

            for(int i=0;i<26;i++){
                nxt[i] = NULL;

            }
            endmark = false;
        }

    }*root;

    Trie(){

        root =  new node();
    }

    void add(string &s){

        node *cur = root;

        int sz = s.size();

        for(int i=0;i<sz;i++){

            int ch = s[i] - 'a';

            if(cur->nxt[ch] == NULL)
                cur->nxt[ch] = new node();
            cur = cur->nxt[ch];
        }
        cur->endmark = true;

    }
    int query(string &s){

        node *cur = root;
        int sz = s.size();
        for(int i=0;i<sz;i++){
            int ch = s[i]-'a';
            if(cur->nxt[ch]==NULL)return false;
            cur = cur->nxt[ch];
        }

       return cur->endmark;
    }

    void del(node *cur){

        for(int i=0;i<26;i++){

            if(cur->nxt[i] != NULL)del(cur->nxt[i]);

        }
        delete(cur);

    }

};
